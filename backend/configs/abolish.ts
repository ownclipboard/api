/**
 * -------------------
 * Config Generated by command:
 * xjs import abolish configs
 * -------------------
 */
import { Abolish } from "abolish";
import { Http } from "xpresser/types/http";
import { useJoi } from "abolish/others/joi";
import { type ValidationError } from "abolish/src/types";

export = () => ({
    /**
     * Validation Rules
     * If `validationRules.enabled` is true
     * Your ValidationRule file will be loaded
     */
    validationRules: {
        enabled: true,
        // Validation File Path
        file: "backend://abolish/Rules",
        // On Validation Error
        onError(http: Http, err: ValidationError) {
            return http.abolishError(err)
        }
    },

    /**
     * Abolish Instance Extender.
     */
    provideAbolish() {
        useJoi(Abolish);

        // Extend Abolish here.
        Abolish.addGlobalValidators(require("abolish/validators/string"));
        Abolish.addGlobalValidators(require("abolish/validators/array"));

        // Include Custom Validators
        require("../abolish/validators");

        return Abolish;
    }
});
